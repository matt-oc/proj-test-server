import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  GetIpamDiscoveredPublicAddressesRequest,
  GetIpamDiscoveredPublicAddressesResult,
} from "../models/models_5";
export { __MetadataBearer, $Command };
export interface GetIpamDiscoveredPublicAddressesCommandInput
  extends GetIpamDiscoveredPublicAddressesRequest {}
export interface GetIpamDiscoveredPublicAddressesCommandOutput
  extends GetIpamDiscoveredPublicAddressesResult,
    __MetadataBearer {}
export declare class GetIpamDiscoveredPublicAddressesCommand extends $Command<
  GetIpamDiscoveredPublicAddressesCommandInput,
  GetIpamDiscoveredPublicAddressesCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: GetIpamDiscoveredPublicAddressesCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetIpamDiscoveredPublicAddressesCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetIpamDiscoveredPublicAddressesCommandInput,
    GetIpamDiscoveredPublicAddressesCommandOutput
  >;
  private serialize;
  private deserialize;
}
