"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyVpnTunnelOptionsResultFilterSensitiveLog = exports.ModifyVpnTunnelOptionsRequestFilterSensitiveLog = exports.ModifyVpnTunnelOptionsSpecificationFilterSensitiveLog = exports.ModifyVpnTunnelCertificateResultFilterSensitiveLog = exports.ModifyVpnConnectionOptionsResultFilterSensitiveLog = exports.ModifyVpnConnectionResultFilterSensitiveLog = exports.ModifyVerifiedAccessTrustProviderResultFilterSensitiveLog = exports.ModifyVerifiedAccessTrustProviderRequestFilterSensitiveLog = exports.ModifyVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = exports.ImportVolumeResultFilterSensitiveLog = exports.ImportVolumeRequestFilterSensitiveLog = exports.ImportSnapshotResultFilterSensitiveLog = exports.ImportSnapshotRequestFilterSensitiveLog = exports.SnapshotDiskContainerFilterSensitiveLog = exports.ImportInstanceResultFilterSensitiveLog = exports.ImportInstanceRequestFilterSensitiveLog = exports.ImportInstanceLaunchSpecificationFilterSensitiveLog = exports.UserDataFilterSensitiveLog = exports.DiskImageFilterSensitiveLog = exports.DiskImageDetailFilterSensitiveLog = exports.ImportImageResultFilterSensitiveLog = exports.ImportImageRequestFilterSensitiveLog = exports.ImageDiskContainerFilterSensitiveLog = exports.GetVpnConnectionDeviceSampleConfigurationResultFilterSensitiveLog = exports.GetPasswordDataResultFilterSensitiveLog = exports.GetLaunchTemplateDataResultFilterSensitiveLog = exports.Status = exports.VpcTenancy = exports.TrafficMirrorSessionField = exports.TrafficMirrorFilterRuleField = exports.TargetStorageTier = exports.HostTenancy = exports.UnsuccessfulInstanceCreditSpecificationErrorCode = exports.OperationType = exports.ModifyAvailabilityZoneOptInStatus = exports.LockMode = exports.IpamManagementState = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const models_0_1 = require("./models_0");
const models_1_1 = require("./models_1");
const models_2_1 = require("./models_2");
const models_3_1 = require("./models_3");
const models_4_1 = require("./models_4");
exports.IpamManagementState = {
    ignored: "ignored",
    managed: "managed",
    unmanaged: "unmanaged",
};
exports.LockMode = {
    compliance: "compliance",
    governance: "governance",
};
exports.ModifyAvailabilityZoneOptInStatus = {
    not_opted_in: "not-opted-in",
    opted_in: "opted-in",
};
exports.OperationType = {
    add: "add",
    remove: "remove",
};
exports.UnsuccessfulInstanceCreditSpecificationErrorCode = {
    INCORRECT_INSTANCE_STATE: "IncorrectInstanceState",
    INSTANCE_CREDIT_SPECIFICATION_NOT_SUPPORTED: "InstanceCreditSpecification.NotSupported",
    INSTANCE_NOT_FOUND: "InvalidInstanceID.NotFound",
    INVALID_INSTANCE_ID: "InvalidInstanceID.Malformed",
};
exports.HostTenancy = {
    dedicated: "dedicated",
    host: "host",
};
exports.TargetStorageTier = {
    archive: "archive",
};
exports.TrafficMirrorFilterRuleField = {
    description: "description",
    destination_port_range: "destination-port-range",
    protocol: "protocol",
    source_port_range: "source-port-range",
};
exports.TrafficMirrorSessionField = {
    description: "description",
    packet_length: "packet-length",
    virtual_network_id: "virtual-network-id",
};
exports.VpcTenancy = {
    default: "default",
};
exports.Status = {
    inClassic: "InClassic",
    inVpc: "InVpc",
    moveInProgress: "MoveInProgress",
};
const GetLaunchTemplateDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LaunchTemplateData && {
        LaunchTemplateData: (0, models_1_1.ResponseLaunchTemplateDataFilterSensitiveLog)(obj.LaunchTemplateData),
    }),
});
exports.GetLaunchTemplateDataResultFilterSensitiveLog = GetLaunchTemplateDataResultFilterSensitiveLog;
const GetPasswordDataResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PasswordData && { PasswordData: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetPasswordDataResultFilterSensitiveLog = GetPasswordDataResultFilterSensitiveLog;
const GetVpnConnectionDeviceSampleConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VpnConnectionDeviceSampleConfiguration && { VpnConnectionDeviceSampleConfiguration: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetVpnConnectionDeviceSampleConfigurationResultFilterSensitiveLog = GetVpnConnectionDeviceSampleConfigurationResultFilterSensitiveLog;
const ImageDiskContainerFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Url && { Url: smithy_client_1.SENSITIVE_STRING }),
});
exports.ImageDiskContainerFilterSensitiveLog = ImageDiskContainerFilterSensitiveLog;
const ImportImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DiskContainers && {
        DiskContainers: obj.DiskContainers.map((item) => (0, exports.ImageDiskContainerFilterSensitiveLog)(item)),
    }),
});
exports.ImportImageRequestFilterSensitiveLog = ImportImageRequestFilterSensitiveLog;
const ImportImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SnapshotDetails && {
        SnapshotDetails: obj.SnapshotDetails.map((item) => (0, models_3_1.SnapshotDetailFilterSensitiveLog)(item)),
    }),
});
exports.ImportImageResultFilterSensitiveLog = ImportImageResultFilterSensitiveLog;
const DiskImageDetailFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ImportManifestUrl && { ImportManifestUrl: smithy_client_1.SENSITIVE_STRING }),
});
exports.DiskImageDetailFilterSensitiveLog = DiskImageDetailFilterSensitiveLog;
const DiskImageFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Image && { Image: (0, exports.DiskImageDetailFilterSensitiveLog)(obj.Image) }),
});
exports.DiskImageFilterSensitiveLog = DiskImageFilterSensitiveLog;
const UserDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UserDataFilterSensitiveLog = UserDataFilterSensitiveLog;
const ImportInstanceLaunchSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserData && { UserData: smithy_client_1.SENSITIVE_STRING }),
});
exports.ImportInstanceLaunchSpecificationFilterSensitiveLog = ImportInstanceLaunchSpecificationFilterSensitiveLog;
const ImportInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DiskImages && { DiskImages: obj.DiskImages.map((item) => (0, exports.DiskImageFilterSensitiveLog)(item)) }),
    ...(obj.LaunchSpecification && {
        LaunchSpecification: (0, exports.ImportInstanceLaunchSpecificationFilterSensitiveLog)(obj.LaunchSpecification),
    }),
});
exports.ImportInstanceRequestFilterSensitiveLog = ImportInstanceRequestFilterSensitiveLog;
const ImportInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ConversionTask && { ConversionTask: (0, models_3_1.ConversionTaskFilterSensitiveLog)(obj.ConversionTask) }),
});
exports.ImportInstanceResultFilterSensitiveLog = ImportInstanceResultFilterSensitiveLog;
const SnapshotDiskContainerFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Url && { Url: smithy_client_1.SENSITIVE_STRING }),
});
exports.SnapshotDiskContainerFilterSensitiveLog = SnapshotDiskContainerFilterSensitiveLog;
const ImportSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DiskContainer && { DiskContainer: (0, exports.SnapshotDiskContainerFilterSensitiveLog)(obj.DiskContainer) }),
});
exports.ImportSnapshotRequestFilterSensitiveLog = ImportSnapshotRequestFilterSensitiveLog;
const ImportSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SnapshotTaskDetail && { SnapshotTaskDetail: (0, models_4_1.SnapshotTaskDetailFilterSensitiveLog)(obj.SnapshotTaskDetail) }),
});
exports.ImportSnapshotResultFilterSensitiveLog = ImportSnapshotResultFilterSensitiveLog;
const ImportVolumeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Image && { Image: (0, exports.DiskImageDetailFilterSensitiveLog)(obj.Image) }),
});
exports.ImportVolumeRequestFilterSensitiveLog = ImportVolumeRequestFilterSensitiveLog;
const ImportVolumeResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ConversionTask && { ConversionTask: (0, models_3_1.ConversionTaskFilterSensitiveLog)(obj.ConversionTask) }),
});
exports.ImportVolumeResultFilterSensitiveLog = ImportVolumeResultFilterSensitiveLog;
const ModifyVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientSecret && { ClientSecret: smithy_client_1.SENSITIVE_STRING }),
});
exports.ModifyVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = ModifyVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog;
const ModifyVerifiedAccessTrustProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.OidcOptions && {
        OidcOptions: (0, exports.ModifyVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog)(obj.OidcOptions),
    }),
});
exports.ModifyVerifiedAccessTrustProviderRequestFilterSensitiveLog = ModifyVerifiedAccessTrustProviderRequestFilterSensitiveLog;
const ModifyVerifiedAccessTrustProviderResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VerifiedAccessTrustProvider && {
        VerifiedAccessTrustProvider: (0, models_0_1.VerifiedAccessTrustProviderFilterSensitiveLog)(obj.VerifiedAccessTrustProvider),
    }),
});
exports.ModifyVerifiedAccessTrustProviderResultFilterSensitiveLog = ModifyVerifiedAccessTrustProviderResultFilterSensitiveLog;
const ModifyVpnConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VpnConnection && { VpnConnection: (0, models_2_1.VpnConnectionFilterSensitiveLog)(obj.VpnConnection) }),
});
exports.ModifyVpnConnectionResultFilterSensitiveLog = ModifyVpnConnectionResultFilterSensitiveLog;
const ModifyVpnConnectionOptionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VpnConnection && { VpnConnection: (0, models_2_1.VpnConnectionFilterSensitiveLog)(obj.VpnConnection) }),
});
exports.ModifyVpnConnectionOptionsResultFilterSensitiveLog = ModifyVpnConnectionOptionsResultFilterSensitiveLog;
const ModifyVpnTunnelCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VpnConnection && { VpnConnection: (0, models_2_1.VpnConnectionFilterSensitiveLog)(obj.VpnConnection) }),
});
exports.ModifyVpnTunnelCertificateResultFilterSensitiveLog = ModifyVpnTunnelCertificateResultFilterSensitiveLog;
const ModifyVpnTunnelOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PreSharedKey && { PreSharedKey: smithy_client_1.SENSITIVE_STRING }),
});
exports.ModifyVpnTunnelOptionsSpecificationFilterSensitiveLog = ModifyVpnTunnelOptionsSpecificationFilterSensitiveLog;
const ModifyVpnTunnelOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TunnelOptions && { TunnelOptions: smithy_client_1.SENSITIVE_STRING }),
});
exports.ModifyVpnTunnelOptionsRequestFilterSensitiveLog = ModifyVpnTunnelOptionsRequestFilterSensitiveLog;
const ModifyVpnTunnelOptionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.VpnConnection && { VpnConnection: (0, models_2_1.VpnConnectionFilterSensitiveLog)(obj.VpnConnection) }),
});
exports.ModifyVpnTunnelOptionsResultFilterSensitiveLog = ModifyVpnTunnelOptionsResultFilterSensitiveLog;
